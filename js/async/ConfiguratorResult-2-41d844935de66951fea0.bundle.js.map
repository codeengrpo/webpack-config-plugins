{"version":3,"sources":["webpack:///./src/components/ConfiguratorResult.tsx","webpack:///./src/lib/downloader.ts"],"names":["registerLanguage","ConfiguratorResult","_a","store","createElement","Fragment","generatedUserConfigurations","npmInstall","style","padding","background","hljs","color","marginBottom","fontFamily","margin","paddingLeft","textIndent","width","whiteSpace","split","map","packageName","i","key","text","variant","webpackConfig","language","onClick","content","filename","mimeType","args","arguments","then","download","default","apply","lazyDownload"],"mappings":"wPASA,IAAkBA,iBAAiB,aAAc,KAC1C,IAAIC,EAAqB,aAAS,SAAUC,GAC/C,IAAIC,EAAQD,EAAGC,MACf,OAAQ,IAAMC,cAAc,IAAMC,SAAU,KACxCF,EAAMG,4BAA4BC,YAAe,IAAMH,cAAc,IAAM,CAAEI,MAAO,CAAEC,QAAS,KAC3F,IAAML,cAAc,MAAO,CAAEI,MAAO,CAAEE,WAAY,IAAMC,KAAKD,WAAYE,MAAO,IAAMD,KAAKC,MAAOH,QAAS,EAAGI,aAAc,KACxH,IAAMT,cAAc,IAAK,CAAEI,MAAO,CAAEM,WAAY,YAAaC,OAAQ,EAAGC,YAAa,GAAIC,YAAa,GAAIC,MAAO,IAC7G,IAAMd,cAAc,OAAQ,CAAEI,MAAO,CAAEW,WAAY,WAC/C,MACA,IAAMf,cAAc,OAAQ,CAAEI,MAAO,CAAEI,MAAO,IAAM,gBAAgBA,QAAW,OAC/E,cACJT,EAAMG,4BAA4BC,WAAWa,MAAM,KAAKC,KAAI,SAAUC,EAAaC,GAAK,OAAQ,IAAMnB,cAAc,OAAQ,CAAEoB,IAAKF,EAAcC,GAC7I,IAAMnB,cAAc,OAAQ,CAAEI,MAAO,CAAEW,WAAY,SAAUP,MAAO,IAAM,oBAAoBA,QAAWU,GACzG,UACZ,IAAMlB,cAAc,kBAAiB,CAAEqB,KAAM,oBAAsBtB,EAAMG,4BAA4BC,YACjG,IAAMH,cAAc,IAAQ,CAAEsB,QAAS,YAAad,MAAO,WAAa,uBAChFT,EAAMG,4BAA4BqB,eAAkB,IAAMvB,cAAc,IAAM,CAAEI,MAAO,CAAEC,QAAS,KAC9F,IAAML,cAAc,MAAO,CAAEI,MAAO,CAAEK,aAAc,KAChD,IAAMT,cAAc,IAAmB,CAAEwB,SAAU,aAAcpB,MAAO,KAASL,EAAMG,4BAA4BqB,gBACvH,IAAMvB,cAAc,kBAAiB,CAAEqB,KAAMtB,EAAMG,4BAA4BqB,eAC3E,IAAMvB,cAAc,IAAQ,CAAEsB,QAAS,YAAad,MAAO,WAAa,sBAC5E,IAAMR,cAAc,IAAQ,CAAEyB,QAAS,WAC/B,OC/Bb,SAAsBC,EAASC,EAAUC,GAC5C,IAAIC,EAAOC,UACX,kCAA8DC,MAAK,SAAUC,GACzE,OAAOA,EAASC,QAAQC,MAAM,KAAML,MD4BjBM,CAAapC,EAAMG,4BAA4BqB,cAAe,oBAAqB,gBACzF","file":"js/async/ConfiguratorResult-2-41d844935de66951fea0.bundle.js","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport { observer } from 'mobx-react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/esm/light';\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport theme from 'react-syntax-highlighter/dist/esm/styles/hljs/vs2015';\r\nimport { lazyDownload } from '../lib/downloader';\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\nexport var ConfiguratorResult = observer(function (_a) {\r\n    var store = _a.store;\r\n    return (React.createElement(React.Fragment, null,\r\n        store.generatedUserConfigurations.npmInstall && (React.createElement(Card, { style: { padding: 20 } },\r\n            React.createElement(\"div\", { style: { background: theme.hljs.background, color: theme.hljs.color, padding: 5, marginBottom: 10 } },\r\n                React.createElement(\"p\", { style: { fontFamily: 'monospace', margin: 0, paddingLeft: 20, textIndent: -20, width: 0 } },\r\n                    React.createElement(\"span\", { style: { whiteSpace: 'nowrap' } },\r\n                        \"npm\",\r\n                        React.createElement(\"span\", { style: { color: theme['hljs-keyword'].color } }, \" i \"),\r\n                        \"--save-dev\"),\r\n                    store.generatedUserConfigurations.npmInstall.split(' ').map(function (packageName, i) { return (React.createElement(\"span\", { key: packageName + i },\r\n                        React.createElement(\"span\", { style: { whiteSpace: 'nowrap', color: theme['hljs-meta-string'].color } }, packageName),\r\n                        ' ')); }))),\r\n            React.createElement(CopyToClipboard, { text: \"npm i --save-dev \" + store.generatedUserConfigurations.npmInstall },\r\n                React.createElement(Button, { variant: \"contained\", color: \"primary\" }, \"Copy to clipboard\")))),\r\n        store.generatedUserConfigurations.webpackConfig && (React.createElement(Card, { style: { padding: 20 } },\r\n            React.createElement(\"div\", { style: { marginBottom: 10 } },\r\n                React.createElement(SyntaxHighlighter, { language: \"javascript\", style: theme }, store.generatedUserConfigurations.webpackConfig)),\r\n            React.createElement(CopyToClipboard, { text: store.generatedUserConfigurations.webpackConfig },\r\n                React.createElement(Button, { variant: \"contained\", color: \"primary\" }, \"Copy to clipboard\")),\r\n            React.createElement(Button, { onClick: function () {\r\n                    return lazyDownload(store.generatedUserConfigurations.webpackConfig, 'webpack.config.js', 'text/plain');\r\n                } }, \"Download\")))));\r\n});\r\n","export function lazyDownload(content, filename, mimeType) {\r\n    var args = arguments;\r\n    import('downloadjs' /* webpackChunkName: 'LazyDownloadJs' */).then(function (download) {\r\n        return download.default.apply(null, args);\r\n    });\r\n}\r\n"],"sourceRoot":""}